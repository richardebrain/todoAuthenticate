import Head from "next/head";
import { table, minifyRecords } from "./api/utils/Airtable";

import Todo from "../components/Todo";
import { useContext, useEffect, useState } from "react";
import { TodoContext } from "../context/TodoContext";
import CustomInput from "../components/CustomInput";
import CustomButton from "../components/CustomButton";
import auth0 from "../lib/auth0";

export default function Home({ initialTodos, user }) {
  const { todos, setTodos, addTodos , setUser} = useContext(TodoContext);
  const [todo, setTodo] = useState("");
  const [popBar , setPopBar] = useState(false);
  const [popBarText , setPopBarText] = useState("");

  useEffect(() => {
    setTodos(initialTodos);
   setUser(user)
  },[initialTodos, user]);

  const handleChangeTodo = (e) => {
    const { value } = e.target;
    setTodo(value);
  };
  
  const handleAddTodo = () => {
    if (todo.trim() ==='' ) {
      setPopBar(!popBar)
       setPopBarText ("You cant't create an empty todo");
        return setTimeout(() =>setPopBar(prevValue=> !prevValue) ,2000)
        
    }else if( todo.length <3){
      setPopBar(!popBar)
      setPopBarText("You can't create a todo with less than 3 values");
      return setTimeout(() =>setPopBar(prevValue=> !prevValue) ,3000)
    }
    else{
      addTodos(todo);
      setTodo(" ");
    }


  };
  return (
    <div>
      <Head>
        <title>Authenticated Todo App </title>
        <meta name="description" content="Generated by create next app" />
     
      </Head>
      <main className="flex flex-col space-y-6 mt-5">
        <div className="flex flex-col mx-4 space-y-2 sm:space-x-4 sm:flex-row sm:space-y-0">
          <CustomInput
            type="text"
            className="form-input w-full dark:bg-slate-400 placeholder:text-white"
            value={todo}
            onChange={handleChangeTodo}
            placeholder="Add Todo"
            id="todo"
            label
          />
          <CustomButton
            className="bg-white  dark:hover:bg-slate-600 dark:bg-slate-500 dark:text-white rounded-none py-2 px-3 text-black font-bold sm:rounded-lg"
            type="submit"
            onClick={handleAddTodo}
          >
            Add Todo
          </CustomButton>
        </div>
        {
          popBar ? <span className="text-white text-center dark:bg-white dark:text-black max-w-md ml-4 -mt-16 py-2 px-4 rounded-lg">{popBarText}</span>: null
        }
        <ul className="">
          {todos && todos.map((todo) => <Todo key={todo.id} todo={todo} />)}
        </ul>
      </main>
    </div>
  );
}

export const getServerSideProps = async ({ req, res }) => {
  const session = auth0.getSession(req, res);
  if (!session || !session.user) {
    return { redirect: { destination: "/login", permanent: false } };
  }
  let todos =[]
  

  try {
    if(session.user){
       todos = await table.select({
        filterByFormula:`userId = "${session.user.sub}"`,
      }).firstPage();
    }
    return {
      props: {
        initialTodos: minifyRecords(todos),
        user: session.user,
      },
    };
  } catch (err) {
    console.log(err);
    return {
      props: {
        err: "something went wrong",
      },
    };
  }
};
