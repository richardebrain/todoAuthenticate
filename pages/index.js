import Head from "next/head";
import { table, minifyRecords } from "./api/utils/Airtable";


import Todo from "../components/Todo";
import { useContext, useEffect,useState } from "react";
import { TodoContext } from "../context/TodoContext";
import CutsomInput from "../components/CutsomInput";
import CustomButton from "../components/CustomButton";
import auth0 from "./api/utils/auth0";
export default function Home({ initialTodos,user }) {
  const { todos, setTodos ,addTodos} = useContext(TodoContext);
const [todo,setTodo] = useState('');

  useEffect(() => {
    setTodos(initialTodos);
    console.log(user)
  }, [setTodos, initialTodos,user]);
const handleChangeTodo =(e)=>{
  const {value} = e.target;
  setTodo(value);
  
  
}
const handleAddTodo = () => {
  if(todo == '')return alert('you cant create empty todo');
  
    addTodos(todo)
    console.log(todo)
    setTodo(' ')
}
  return (
    <div>
      <Head>
        <title>Authenticated Todo App </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col space-y-4">
        <div className="flex space-x-4">

        <CutsomInput type='text' className='form-input flex-1' value={todo} onChange={handleChangeTodo}/>
        <CustomButton className='bg-blue-400 hover:bg-blue-600 rounded-lg py-2 px-3 text-white font-bold' type='submit' onClick={handleAddTodo}>Add Todo</CustomButton>
        </div>
    
      <ul className="">
        {todos && todos.map((todo) => <Todo key={todo.id} todo={todo} />)}
      </ul>
      </main>
     
    </div>
  );
}

export const getServerSideProps = async ({req,res}) => {
 const session = await auth0.getSession(req,res);
 
  try {
    const todos = await table.select({}).firstPage();
    return {
      props: {
        initialTodos: minifyRecords(todos),
        user: session.user || null
      },
    };
  } catch (err) {
    console.log(err);
    return {
      props: {
        err: "something went wrong",
      },
    };
  }
};
